{"title":"淘七淘八","description":"一些记录","language":"zh-CN","link":"//ataotao.github.io","pubDate":"Thu, 09 Feb 2017 01:03:12 GMT","lastBuildDate":"Thu, 09 Feb 2017 01:40:57 GMT","generator":"hexo-generator-json-feed","webMaster":"Ataotao","items":[{"title":"Javascript递归方式完美实现对象、数组深拷贝","link":"//ataotao.github.io/2017/02/09/javascript-deepClone/","description":"对象拷贝方式有很多种，但是如何能够不抛弃对象的constructor，而且相互对象的引用也会完整copy，不受影响，请看下面代码：深拷贝：对于深拷贝，针对成员变量存在指针的情况，不仅仅是简单的指针赋值，而是重新分配内存空间浅拷贝：只是拷贝了指针，使得两个指针指向同一个地址 知乎上有一个答案，这个方法可以拷贝对象和数组 123456789101112131415var cloneObj = function(obj)&#123; var str, newobj = obj.constructor === Array ? [] : &#123;&#125;; if(typeof obj !== 'object')&#123; return; &#125; else if(window.JSON)&#123; str = JSON.stringify(obj), //系列化对象 newobj = JSON.parse(str); //还原 &#125; else &#123; for(var i in obj)&#123; newobj[i] = typeof obj[i] === 'object' ? cloneObj(obj[i]) : obj[i]; &#125; &#125; return newobj;&#125;; 这个方法遇到环或者是其他类型的数据就咯屁了，网上大部分深克隆的答案都没考虑循环引用问题以及不能toJSON的对象问题。自虐一下，放出一个完美方案，虽然某些类型不太可能遇到，采用这方案更加不容易出错 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//完美解决方案var http = require('http');function deepClone(initialObj, finalObj) &#123; return _deepClone(initialObj, finalObj, &#123; k: [], v: [] &#125;);&#125;function _deepClone(initialObj, finalObj, conflict) &#123; var i; if (initialObj &amp;&amp; typeof initialObj === \"object\" &amp;&amp; (i = [Object, Array].indexOf(initialObj.constructor)) != -1) &#123; if (!finalObj) &#123; finalObj = initialObj.constructor === Array ? [] : &#123;&#125;; &#125; if (conflict) &#123; i = conflict.k.indexOf(initialObj); if (i != -1) &#123; return conflict.v[i]; &#125; conflict.k.push(initialObj); conflict.v.push(finalObj); &#125; for (var key in initialObj) &#123; finalObj[key] = _deepClone(initialObj[key], finalObj[key], conflict); &#125; return finalObj; &#125; return initialObj;&#125;//测试数据var a = &#123; \"n\": 1&#125;;a.x = a; //环引用var b = deepClone(a);console.log(b, b.x === b); //查看拷贝对象，x属性为环引用，一直循环//各种不同类型数据拷贝console.log(deepClone(1)); console.log(deepClone(new Date())); console.log(deepClone(/regex/i));console.log(deepClone(false));console.log(deepClone(undefined));//测试数据 end","pubDate":"Thu, 09 Feb 2017 01:03:12 GMT","guid":"//ataotao.github.io/2017/02/09/javascript-deepClone/","category":"Javascript"},{"title":"Hello World","link":"//ataotao.github.io/2017/02/08/hello-world/","description":"新创立了hexo-site","pubDate":"Wed, 08 Feb 2017 06:48:40 GMT","guid":"//ataotao.github.io/2017/02/08/hello-world/","category":"随笔"}]}